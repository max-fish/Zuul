#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ \r\n\ A\ "Room"\ also\ stores\ all\ the\ items\ and\ character\ associated\ with\ it\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes,\ and\ Maxim\ Fishman\r\n\ @version\ 2016.02.29\r\n
comment1.params=description\ locked
comment1.target=Room(java.lang.String,\ boolean)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=
comment10.target=java.lang.String\ getShortDescription()
comment10.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment11.params=
comment11.target=java.lang.String\ getLongDescription()
comment11.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ \ \ \ \ Items\ in\ room\:\ axe\ hammer\r\n\ \ \ \ \ Characters\ in\ room\:\ Bob\ Joe\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment12.params=
comment12.target=java.lang.String\ getExitString()
comment12.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment13.params=
comment13.target=java.lang.String\ getItemString()
comment13.text=\r\n\ Return\ a\ string\ describing\ the\ items\ that\ are\ in\ the\ room,\ for\ example\r\n\ "Items\ in\ room\:\ axe\ hammer"\r\n\ @return\ Names\ of\ the\ room's\ items\r\n
comment14.params=
comment14.target=java.lang.String\ getCharacterString()
comment14.text=\r\n\ Retrn\ a\ string\ describing\ the\ characters\ that\ are\ in\ the\ room,\ for\ example\r\n\ "Characters\ in\ room\:\ Bob\ Joe"\r\n\ @return\ Names\ of\ the\ room's\ characters\r\n
comment15.params=characterName
comment15.target=Character\ getCharacter(java.lang.String)
comment15.text=\r\n\ Returns\ a\ character\ given\ it's\ name\r\n\ @param\ name\ of\ the\ character\r\n\ @return\ character\ instance\ object\ (value)\ associated\ with\ the\ character\ name\ (key)\ in\ the\ hashmap\ of\ characters\ in\ the\ room\r\n
comment16.params=
comment16.target=java.util.ArrayList\ getAllCharacters()
comment16.text=\r\n\ Return\ the\ arraylist\ of\ all\ characters\ of\ type\ HashMap<String,Character>\r\n\ @return\ HashMap<String,Character>\r\n
comment17.params=
comment17.target=java.util.ArrayList\ getAllCharacterNames()
comment17.text=\r\n\ Return\ the\ arraylist\ of\ all\ the\ character\ names\r\n\ @return\ ArrayList<String>\r\n
comment18.params=
comment18.target=java.util.ArrayList\ getAllItemNames()
comment18.text=\r\n\ Return\ the\ arraylist\ of\ all\ the\ item\ names\r\n\ @return\ ArrayList<String>\r\n
comment19.params=
comment19.target=void\ removeAllCharactersInRoom()
comment19.text=\r\n\ Remove\ all\ the\ characters\ in\ this\ room\ (used\ when\ moving\ characters)\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment20.params=characterName
comment20.target=boolean\ characterInRoom(java.lang.String)
comment20.text=\r\n\ Checks\ if\ a\ given\ character\ is\ in\ the\ room\r\n\ @param\ Name\ of\ character\r\n
comment21.params=
comment21.target=boolean\ isLocked()
comment21.text=\r\n\ Checks\ if\ the\ room\ is\ locked\r\n\ @return\ true/false\r\n
comment22.params=direction
comment22.target=Room\ getExit(java.lang.String)
comment22.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment23.params=
comment23.target=java.util.Collection\ getNeighbors()
comment23.text=\r\n\ return\ all\ the\ neighbors\ of\ this\ room\r\n\ @return\ Collection<Room>\r\n
comment24.params=room
comment24.target=boolean\ equals(Room)
comment24.text=\r\n\ Checks\ if\ this\ room\ is\ equivalent\ to\ a\ given\ room\ by\ determining\r\n\ whether\ it\ has\ the\ same\ neighbors\r\n\ @param\ Room\r\n\ @return\ true/false\r\n
comment25.params=
comment25.target=void\ scrambleCharacters()
comment25.text=\r\n\ shuffles\ the\ arrayList\ of\ all\ the\ characters\ of\ type\ HashMap<String,\ Character>\r\n
comment3.params=itemName\ description\ weight
comment3.target=void\ addItem(java.lang.String,\ java.lang.String,\ int)
comment3.text=\r\n\ Add\ a\ brand\ new\ item\ to\ this\ room\r\n\ @param\ name\ \r\n\ @param\ description\ \r\n\ @param\ weight\r\n
comment4.params=itemName\ item
comment4.target=void\ addItem(java.lang.String,\ Item)
comment4.text=\r\n\ Add\ an\ item\ to\ this\ room\ by\ reference\ (an\ item\ that\ already\ exists\ in\ the\ game)\r\n\ @param\ name\ of\ item\r\n\ @param\ item\ itself\r\n
comment5.params=characterName\ phrase
comment5.target=void\ addCharacter(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Add\ a\ character\ to\ this\ room\ with\ a\ specified\ name\ and\ phrase\ (use\ for\ creating\ brand\ new\ characters)\r\n\ @param\ name\ of\ character\r\n\ @param\ phrase\ of\ character\r\n
comment6.params=newCharacters
comment6.target=void\ addCharacter(java.util.HashMap)
comment6.text=\r\n\ Add\ a\ character\ with\ an\ already\ defined\ HashMap\ of\ this\ character\ (use\ for\ assigning\ existing\ characters)\r\n\ @param\ HashMap<String,Character>\r\n
comment7.params=itemName
comment7.target=Item\ getItem(java.lang.String)
comment7.text=\r\n\ Return\ an\ item\ given\ it's\ name\r\n\ @param\ name\ of\ item\r\n\ @return\ item\r\n
comment8.params=itemName
comment8.target=void\ removeItem(java.lang.String)
comment8.text=\r\n\ Remove\ an\ item\ from\ this\ room\ given\ it's\ name\r\n\ @param\ name\ of\ item\r\n
comment9.params=itemName
comment9.target=boolean\ itemInRoom(java.lang.String)
comment9.text=\r\n\ Check\ if\ an\ item\ is\ in\ this\ room\r\n\ @param\ name\ of\ item\r\n\ @return\ true/false\r\n
numComments=26
